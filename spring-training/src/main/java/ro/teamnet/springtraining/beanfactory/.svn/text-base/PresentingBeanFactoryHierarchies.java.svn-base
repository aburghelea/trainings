package ro.teamnet.springtraining.beanfactory;

import org.springframework.beans.factory.BeanFactory;
import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;
import org.springframework.beans.factory.xml.XmlBeanFactory;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.core.io.ClassPathResource;
import ro.teamnet.springtraining.TheGreedyCapitalist;

/**
 * Created with IntelliJ IDEA.
 * User: gerard.dragoi
 * Date: 7/11/12
 * Time: 3:30 PM
 * To change this template use File | Settings | File Templates.
 */
public class PresentingBeanFactoryHierarchies {

    public static void main(String[] args) {
        //exerciseBeanDefinitionLookupWithOverriding();

        final ApplicationContext ctx =
                new ClassPathXmlApplicationContext("capitalists-child-container.xml","capitalists.xml");

        final TheGreedyCapitalist bean = ctx.getBean("duplicateDefinitionBothInParentAsInChild", TheGreedyCapitalist.class);
        System.out.println(bean);
    }

    private static void exerciseBeanDefinitionLookupWithOverriding() {
        ConfigurableListableBeanFactory parentFactory =
                BeanFactories.from("capitalists.xml", ShyIntroToBeanFactory.class);

        final ClassPathResource childResource =
                new ClassPathResource("capitalists-child-container.xml", PresentingBeanFactoryHierarchies.class);

        BeanFactory childFactory = new XmlBeanFactory(childResource, parentFactory);

        final TheGreedyCapitalist parentBean = parentFactory.getBean("duplicateDefinitionBothInParentAsInChild", TheGreedyCapitalist.class);
        final TheGreedyCapitalist childBean = childFactory.getBean("duplicateDefinitionBothInParentAsInChild", TheGreedyCapitalist.class);

        System.out.println("Getting the bean straight from the parent -----------------------");
        System.out.println(parentBean);
        System.out.println("------------------------------------------------------------------");
        System.out.println();
        System.out.println("Getting the bean 'duplicateDefinitionBothInParentAsInChild' from the child BF " +
                "; but having the same ID it will override the bean definition found in parent");
        System.out.println(childBean);
    }
}
